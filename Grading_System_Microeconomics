# TASK OVERVIEW:
# Our final grade is sum of the weighted grades from three sections: activities, assignment & exam.
# Create grading system based on Monte Carlo simulation to find the best set of weights for our marks.
# Assume something about the distributions of grades from exam, assignment and activities. 
# and compare different sets of weights.   
# What will be for you the criterium of the goodness or the results? Maximizing of the expected rating or minimalization of failure? 

# SOLUTION:
requiredPackages = c("data.table") # list of required packages
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)} 
for(i in requiredPackages){library(i,character.only = TRUE) } 

assignment<-rnorm(1000,85,8);
assignment <- ifelse(assignment>100,100,assignment) #all assignments which exceed 100 will be replaced with "100" 

activities<-rnorm(1000,76,10)
activities <- ifelse(activities>100,100,activities) #all activities which exceed 100 will be replaced with "100" 

exam<-rnorm(1000,90,5)
exam <- ifelse(exam>100,100,exam) #all exams which exceed 100 will be replaced with "100"

par(mfrow=c(2,2)) #graph 2 by 2
hist(assignment)
hist(activities)
hist(exam)

rand_vect_cont <- function(N, M, sd = 1) {
  vec <- rnorm(N, M/N, sd)
  vec / sum(vec) * M
}
for (i in 1:1000){
  weight<-transpose(as.data.frame(replicate(i,rand_vect_cont(3,100)/100)))}
marks<-data.frame(marks=weight$V1*assignment+weight$V2*activities+weight$V3*exam,assignment, activities,exam, w.as=weight$V1, w.ac=weight$V2, w.ex=weight$V3)


weight[which.max(marks$marks),] #weights that give us maximum mark

marks[which.max(marks$marks),] #entire row with maximum mark, assignment, activities, exam and its weights

# Weight of assignment 0.3303046, weight of activities 0.3340115, weight of exam 0.3356839
